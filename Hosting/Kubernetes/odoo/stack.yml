apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 1
  labels:
    service: webserver
    app: odoo
  name: odoo-deployment-webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      service: webserver
      app: odoo
  template:
    metadata:
      labels:
        service: webserver
        app: odoo
    spec:
      containers:
      - image: odoo
        imagePullPolicy: IfNotPresent
        name: odoo
        volumeMounts:
          - name: odoo-webserver-data
            mountPath: /var/lib/odoo
          - name: odoo-addons
            mountPath: /mnt/extra-addons
          - name: odoo-conf
            mountPath: /etc/odoo/odoo.conf
            subPath: odoo.conf
        env:
          - name: HOST
            value: odoo-service-database
          - name: USER
            value: odoo
          - name: PASSWORD
            value: odoo
      volumes:
        - name: odoo-webserver-data
          emptyDir: {}
        - name: odoo-addons
          hostPath:
            path: "/nfsshares$PWD/addons"
            type: Directory
        - name: odoo-conf
          configMap:
            name: odoo-webserver-conf
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 1
  labels:
    service: database
    app: odoo
  name: odoo-deployment-database
spec:
  replicas: 1
  selector:
    matchLabels:
      service: database
      app: odoo
  template:
    metadata:
      labels:
        service: database
        app: odoo
    spec:
      containers:
      - image: postgres
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 999
          allowPrivilegeEscalation: true
        name: postgres
        volumeMounts:
          - name: odoo-data
            mountPath: /var/lib/postgresql/data/
        env:
          - name: POSTGRES_DB
            value: postgres
          - name: POSTGRES_PASSWORD
            value: odoo
          - name: POSTGRES_USER
            value: odoo
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
      volumes:
        - name: odoo-data
          emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: webserver
    app: odoo
  name: odoo-service-webserver
spec:
  ports:
  - port: 8069
    protocol: TCP
    targetPort: 8069
  selector:
    service: webserver
    app: odoo
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: database
    app: odoo
  name: odoo-service-database
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    service: database
    app: odoo
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: odoo
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
  name: odoo-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: odoo.test
    http:
      paths:
      - backend:
          service:
            name: odoo-service-webserver
            port:
              number: 8069
        path: /
        pathType: Prefix
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: odoo-data
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/nfsshares$PWD/database"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: odoo-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 3Gi